// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebService.Infrascture.DataBase.EF;

namespace WebService.Infrascture.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("WebService.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = new Guid("10000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Designe",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("20000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Develope",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("30000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Host",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("40000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Support",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("WebService.Domain.Entities.Image", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(50);

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(500);

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            ID = new Guid("10000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "01.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("20000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "02.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("30000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "03.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("40000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "04.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("50000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "05.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("60000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "06.jpg",
                            Path = "/images/gallery/Test/",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("WebService.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<bool>("Delete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(1000);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("Date");

                    b.Property<string>("SiteName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<string>("SiteUrl")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = new Guid("10000000-0000-0000-0000-000000000000"),
                            Customer = "Shrine vast",
                            Delete = false,
                            Description = "Relief oft feels to his tales earth would love paphian might of light rake sore none me his flatterers might",
                            EndDate = new DateTime(2019, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SiteName = "The to a one virtues",
                            SiteUrl = "https://Tests.com",
                            StartDate = new DateTime(2019, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("WebService.Domain.Entities.Service", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(40);

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            ID = new Guid("10000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Product Management",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("20000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Product Information",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("30000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Admin panel",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("40000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Expandable in the online store",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("50000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Support Long Time WebSite",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("WebService.Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Delete")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasMaxLength(30);

                    b.Property<Guid>("Product_ID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("Product_ID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            ID = new Guid("10000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = ".NetCore",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("20000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "C#",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("30000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Designer",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("40000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Developer",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("50000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "Ecommerce",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            ID = new Guid("60000000-0000-0000-0000-000000000000"),
                            Delete = false,
                            Name = "WebShop",
                            Product_ID = new Guid("10000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("WebService.Domain.Entities.Category", b =>
                {
                    b.HasOne("WebService.Domain.Entities.Product", null)
                        .WithMany("Category")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebService.Domain.Entities.Image", b =>
                {
                    b.HasOne("WebService.Domain.Entities.Product", null)
                        .WithMany("Images")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebService.Domain.Entities.Service", b =>
                {
                    b.HasOne("WebService.Domain.Entities.Product", null)
                        .WithMany("Services")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebService.Domain.Entities.Tag", b =>
                {
                    b.HasOne("WebService.Domain.Entities.Product", null)
                        .WithMany("Tags")
                        .HasForeignKey("Product_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
